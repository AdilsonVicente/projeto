<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
    version="2.1">
    
    <named-native-query name="Vendas.totalPorMes" result-set-mapping="totalPorMesMapping">
        <query>
            SELECT  
			    CASE   
			        WHEN tipo = 'AT' THEN 'Ativacao / Recompra' 
			        ELSE CASE 
			            WHEN tipo = 'N' THEN 'Recompra' 
			            ELSE CASE 
			                WHEN tipo = 'PK' THEN 'Compra Plano' 
			                ELSE CASE 
			                    WHEN tipo = 'UK' THEN 'Upgrade de Plano' 
			                    ELSE CASE 
			                    WHEN tipo = 'LV' THEN 'Loja Virtual' 
			                    ELSE CASE 
			                    WHEN tipo = 'CV' THEN 'Convites Eventos' 
			                    ELSE tipo 
			                END 
			                END 
			                END 
			            END 
			        END 
			    END tipo, 
			    SUM(valor_venda) valor_venda 
			 FROM 
			    (SELECT DISTINCT 
			        a.id, ROUND(FCVALOR_PEDIDO(a.id), 2) valor_venda, a.tipo 
			    FROM 
			        pedido_skl a 
			    WHERE 
			         a.situacao = 'P'  and a.pais = 'BR'
			) AS v 
			 GROUP BY tipo
        </query>
    </named-native-query>
    
    <sql-result-set-mapping name="totalPorMesMapping">
        <constructor-result target-class="com.algaworks.brewer.dto.VendaMes">
            <column name="mes" class="java.lang.String"/>
            <column name="total" class="java.lang.Integer"/>
        </constructor-result>
    </sql-result-set-mapping>
    
    <sql-result-set-mapping name="porOrigemMapping">
        <constructor-result target-class="com.algaworks.brewer.dto.VendaOrigem">
            <column name="mes" class="java.lang.String"/>
            <column name="total_nacional" class="java.lang.Integer"/>
            <column name="total_internacional" class="java.lang.Integer"/>
        </constructor-result>
    </sql-result-set-mapping>
    
</entity-mappings>