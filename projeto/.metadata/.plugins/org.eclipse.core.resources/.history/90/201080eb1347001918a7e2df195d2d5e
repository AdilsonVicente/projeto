package analiseskillus.com.br.config;

import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import relatorioskillusportal.repositorio.RelatoriosPortal;

@Configuration
	@EnableTransactionManagement
	@EnableJpaRepositories(basePackageClasses=RelatoriosPortal.class , 
							entityManagerFactoryRef="mysqlDBEmFactory" , 
							transactionManagerRef = "mysqlDSTransactionManager")
	public class DataSourceMysqlConfig {
	 
	  
	   @Bean
	   @ConfigurationProperties("spring.datasourcebanco2")
	   public DataSourceProperties mysqlDSProperties() {
	           return new DataSourceProperties();
	                
	 }
	 
	  @Bean
	      public DataSource mssqlserverDataSource(@Qualifier("mysqlDSProperties") DataSourceProperties mysqlDSProperties) {
	            
	             DataSource dataSource = mysqlDSProperties.initializeDataSourceBuilder().build();
	              return dataSource;
	       }
	       
	        @Bean
	    public LocalContainerEntityManagerFactoryBean mssqlserverDBEmFactory(@Qualifier("mysqlDataSource") DataSource mysqlDataSource, EntityManagerFactoryBuilder builder) {
	          LocalContainerEntityManagerFactoryBean factory = builder.dataSource(mysqlDataSource).packages(RelatoriosPortal.class).build();
	         factory.setPersistenceUnitName("mysql");
	              return factory; 
	   }
	   
	    
	     @Bean
	 public PlatformTransactionManager mysqlDSTransactionManager(EntityManagerFactory factory) {
	         return new JpaTransactionManager(factory);
	    }
	    
	     
	}
